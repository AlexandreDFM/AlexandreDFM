name: Deploy on OVH VPS

on:
    push:
        branches:
            - main

jobs:
    # build_api:
    #   name: Build and push Backend images
    #   runs-on: ubuntu-latest
    #   steps:
    #     - name: Checkout repository
    #       uses: actions/checkout@v4
    #     - name: Set up QEMU
    #       uses: docker/setup-qemu-action@v3
    #     - name: Set up Docker Buildx
    #       uses: docker/setup-buildx-action@v3
    #     - name: Login to GitHub Container Registry
    #       uses: docker/login-action@v3
    #       with:
    #         registry: ghcr.io
    #         username: ${{ github.repository_owner }}
    #         password: ${{ secrets.GITHUB_TOKEN }}

    #     - name: Build and push backend image
    #       uses: docker/build-push-action@v2
    #       with:
    #         context: "./portfolio/backend/"
    #         push: true
    #         tags: |
    #           ghcr.io/alexandredfm/alexandredfm-api:latest
    #           ghcr.io/alexandredfm/alexandredfm-api:${{ github.sha }}
    #         cache-from: type=gha
    #         cache-to: type=gha,mode=max

    build_frontend:
        name: Build and push frontend image
        runs-on: ubuntu-latest
        steps:
            - name: Checkout repository
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3
            - name: Login to GitHub Container Registry
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: ${{ github.repository_owner }}
                  password: ${{ secrets.GITHUB_TOKEN }}
            - name: Build and push Frontend image
              id: docker_build
              uses: docker/build-push-action@v2
              with:
                  context: "./portfolio/frontend/"
                  push: true
                  tags: |
                      ghcr.io/alexandredfm/alexandredfm:latest
                      ghcr.io/alexandredfm/alexandredfm:${{ github.sha }}
                  cache-from: type=gha
                  cache-to: type=gha,mode=max

    # deploy-server:
    #     name: Deploy Docker Compose to server & restart
    #     needs: [build_frontend] #, build_api]
    #     runs-on: ubuntu-latest
    #     steps:
    #         - name: Checkout
    #           uses: actions/checkout@v4
    #           with:
    #               fetch-depth: 0
    #         - name: Create SSH Keys
    #           run: |
    #               mkdir -p ~/.ssh/
    #               echo "${{ secrets.SSH_PRIV_KEY }}" > ~/.ssh/id_rsa
    #               chmod 600 ~/.ssh/id_rsa
    #               ssh-keyscan -H ${{ secrets.HOST }} >> ~/.ssh/known_hosts
    #         - name: Copy Docker Compose via SCP
    #           uses: appleboy/scp-action@v0.1.7
    #           with:
    #               host: ${{ secrets.HOST }}
    #               username: ${{ secrets.USERNAME }}
    #               port: ${{ secrets.PORT }}
    #               key: ${{ secrets.SSH_PRIV_KEY }}
    #               source: "./portfolio/docker-compose-production.yml"
    #               target: ${{ secrets.WORK_DIR }}
    #         - name: Connect and Pull Docker
    #           run: |
    #               ssh ${{ secrets.USER_IP }} "cd ${{ secrets.WORK_DIR }}/portfolio && docker compose -f docker-compose-production.yml pull && docker compose -f docker-compose-production.yml up -d && exit"
    #         - name: Clean up SSH Keys
    #           run: rm -rf ~/.ssh
